name: test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: shell_test
      run: |
        wget "https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz" && \
        tar --xz -xvf "shellcheck-stable.linux.x86_64.tar.xz" && \
        shellcheck() { "shellcheck-stable/shellcheck" "$@"; } && \
        shellcheck --version && \
        /bin/bash --version && \
        for shellscript in $(find . -type f -name "*.sh"); do /bin/bash -n "$shellscript" && shellcheck -x -e SC2206 "$shellscript"; done
    - name: unit_test
      run: |
        sudo apt-get update && sudo apt-get install -y python3-dev libjpeg62-dev procps zlib1g-dev build-essential curl i2c-tools python3-smbus && \
        python3 -m pip install -U pip && \
        git clone https://github.com/RPi-Distro/RTIMULib.git -b V7.2.1 && \
        cd RTIMULib/Linux/python && python3 setup.py build && sudo python3 setup.py install && cd ../../.. && \
        pip3 install codecov pytest-cov pytest smbus urwid && \
        curl -L https://github.com/pisupply/pijuice/tarball/V1.8 | tar -xz && \
        cd PiSupply-PiJuice-bc61c0f/Software/Source && \
        python3 setup.py build && sudo python3 setup.py install && cd ../../.. && \
        rm -rf PiSupply-PiJuice-bc61c0f && \
        rm -rf RTIMULib && \
        pip3 install -r tests/requirements.txt && \
        pip3 install -r requirements.txt && \
        pip3 install -r services/sense/requirements.txt && \
        pip3 install -r services/daisy/requirements.txt && \
        pip3 install -r services/status-updater/requirements.txt && \
        pip3 install -r services/environment-sensor/requirements.txt && \
        pip3 install -r services/s3-upload/requirements.txt && \
        export PYTHONPATH=$PWD/pibackbone:$PYTHONPATH && \
        pytype . && \
        pylint --fail-under=6.0 pibackbone && \
        PATH=/home/runner/.local/bin:$PATH py.test -v -vv --capture=tee-sys --cov-report term-missing --cov=services --cov=pibackbone -c .coveragerc && \
        PATH=/home/runner/.local/bin:$PATH coverage report && \
        PATH=/home/runner/.local/bin:$PATH coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      if: github.repository == 'iqtlabs/pibackbone'
